---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import BaseLayout from '@src/layouts/BaseLayout.astro';
import { slugify, unslugify } from '@src/utils';
import PostsByYear from '@src/components/PostsByYear.astro';

type BlogPost = CollectionEntry<'blog'>;
export const getStaticPaths = async () => {
	const allPosts: BlogPost[] = await getCollection('blog');
	const allTags = [
		...new Set(
			allPosts
				.map((post) => post.data.tags)
				.flat()
				.filter((tag) => tag && typeof tag === 'string' && tag.trim() !== '')
		)
	];

	return allTags.map((tag) => {
		const slugifiedTag = slugify(tag as string);
		// 确保不生成空的标签路径
		if (!slugifiedTag) {
			console.warn(`警告: 标签 "${tag}" 生成了空的 slug`);
		}
		return {
			params: {
				tag: slugifiedTag || `tag-${Date.now()}`
			}
		};
	});
};

const { tag } = Astro.params;
const allPosts: BlogPost[] = (await getCollection('blog')).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
const taggedPosts = allPosts.filter((post) => post.data.tags?.map((tagItem) => slugify(tagItem)).includes(tag || ''));
const displayTagName = await unslugify(tag || '');
const title = `All Posts Tagged with ${displayTagName}`;
const description = `All Posts Tagged with ${displayTagName}`;
---

<BaseLayout title={title} description={description}>
	<div class='container'>
		<div class='mb-10'>
			<h1 class='text-3xl font-bold mb-2'>{title}</h1>
		</div>
		<PostsByYear posts={taggedPosts} />
	</div>
</BaseLayout>
